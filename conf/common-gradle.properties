# suppress inspection "UnusedProperty" for whole file
#
# This file contains common properties for all builds.
# Gradle properties are not propagated automatically to included builds https://github.com/gradle/gradle/issues/2534
# See build-logic/gradle for plugin that does common properties distribution
# How to use:
#  - run :generateCommonProperties after updates here to rewrite all included build's gradle.properties with these values
#  - task :checkCommonProperties runs on CI to check consistency

kotlin.code.style=official
# JVM arguments considerations:
# GC:
#   - Use default GC for Java 11 - G1
#     It showed almost the same results in comparison to ParallelGC,
#     but can shrink unused memory and return it to the OS.
# Xmx:
#   - Is the same as in avito internal repository to reuse Gradle daemon
#
# TODO: Use Gradle doctor to detect GC issues MBS-12451
#   because UseGCOverheadLimit and GCTimeLimit is not supported yet in G1 https://bugs.openjdk.java.net/browse/JDK-8212084
org.gradle.jvmargs=-Xmx9g -Dfile.encoding=UTF-8
org.gradle.unsafe.configuration-cache=false
# - https://youtrack.jetbrains.com/issue/KT-43605
#   should be ok to use it because properties are `java.rmi.server.hostname` and `kotlin.environment.keepalive`
#   which should not change on local machine
org.gradle.unsafe.configuration-cache-problems=warn
org.gradle.parallel=true
org.gradle.caching=true
# https://github.com/gradle/gradle/issues/4823
org.gradle.configureondemand=false
# Limited locally, because unlimited workers will hang pc on parallel gradleTest execution
org.gradle.workers.max=4
# to make MergeResources tasks relocatable https://issuetracker.google.com/issues/141301405
android.experimental.enableSourceSetPathsMap=true
# to make CompileLibraryResourcesTask tasks relocatable https://issuetracker.google.com/issues/141301405
android.experimental.cacheCompileLibResources=true
org.gradle.vfs.watch=true
# To enable fail-fast checks for type-safe accessors.
# To make GeneratePrecompiledScriptPluginAccessors cacheable.
systemProp.org.gradle.kotlin.dsl.precompiled.accessors.strict=true
